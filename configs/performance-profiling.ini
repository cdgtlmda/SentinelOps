# Performance profiling configuration for SentinelOps tests

[profiling]
# Enable performance profiling
enabled = true

# Profiler backend
backend = "py-spy"

# Output format
output_format = "flamegraph"

# Output directory
output_dir = "test-reports/performance/"

# Profile sampling rate (Hz)
sampling_rate = 100

# Duration for profiling runs (seconds)
duration = 60

# Memory profiling
memory_profiling = true
memory_profiler = "memory_profiler"

# CPU profiling
cpu_profiling = true
cpu_profiler = "cProfile"

# Line profiling for critical functions
line_profiling = true
line_profiler_functions = [
    "src.detection_agent.agent.DetectionAgent.process_logs",
    "src.analysis_agent.agent.AnalysisAgent.analyze_incident",
    "src.remediation_agent.execution_engine.ExecutionEngine.execute_action",
    "src.communication_agent.agent.CommunicationAgent.send_notification"
]

# Benchmark thresholds
[thresholds]
# Maximum acceptable latencies (ms)
detection_latency = 1000
analysis_latency = 5000
remediation_latency = 3000
notification_latency = 2000

# Minimum throughput (operations/second)
log_processing_throughput = 1000incident_processing_throughput = 100
action_execution_throughput = 50

# Resource limits
max_memory_mb = 2048
max_cpu_percent = 80

# pytest-benchmark configuration
[pytest-benchmark]
# Minimum rounds for benchmarking
min_rounds = 10

# Maximum time for benchmarking
max_time = 30

# Warmup rounds
warmup = true
warmup_iterations = 5

# Statistical analysis
disable_gc = true
pedantic = true

# Output options
save = "test-reports/benchmarks/"
compare = true
histogram = true

# Continuous profiling configuration
[continuous]
# Enable continuous profiling in CI/CD
enabled = true

# Profile every Nth test run
profile_frequency = 5

# Alert on performance regression
alert_on_regression = true
regression_threshold = 10  # percent

# Integration with monitoring
[monitoring]
# Export metrics to monitoring system
export_metrics = true
metrics_backend = "prometheus"
metrics_port = 9090

# Grafana dashboard generation
generate_dashboards = true
dashboard_template = "configs/performance-dashboard.json"
