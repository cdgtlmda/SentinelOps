[tool:pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests
pythonpath = . src

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test markers
markers =
    unit: Unit tests that run in isolation without external dependencies
    integration: Integration tests that test component interactions with mocks
    e2e: End-to-end tests that test full workflows with mocks
    slow: Tests that take longer than 1 second to run
    smoke: Quick smoke tests for basic functionality
    security: Security-focused tests
    performance: Performance and load tests

# Coverage configuration
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=90
    --strict-markers
    -v
    --tb=short
    --maxfail=1

# Ignore warnings from third-party libraries
filterwarnings =
    ignore::DeprecationWarning:google.*
    ignore::DeprecationWarning:grpc.*
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestDeprecationWarning:pytest_asyncio.*
    error::UserWarning:src.*

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto

# Output options
console_output_style = progress
log_cli = true
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Pytest plugins
required_plugins = 
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    pytest-timeout>=2.1.0
        pytest-env>=0.8.0
